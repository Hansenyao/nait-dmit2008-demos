import { MOVIE_LIST } from "../utils/movies";

import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";

import Alert from "@mui/material/Alert";
import Button from "@mui/material/Button";
import Container from "@mui/material/Container";
import Grid from "@mui/material/Grid";
import TextField from "@mui/material/TextField";
import Typography from "@mui/material/Typography";

import List from "@mui/material/List";
import ListItem from "@mui/material/ListItem";
import ListItemText from "@mui/material/ListItemText";
import { useState } from "react";

export default function Home() {
  const [title, setTitle] = useState("");
  const [year, setYear] = useState("");
  const [movies, setMovies] = useState(MOVIE_LIST);
  const [errors,setErrors]=useState([]);

  function handleSubmit(e) {
    e.preventDefault();
    let errorsTemp=[];
    if(isNaN(year) && year!="") errorsTemp.push("Year field should be a digit");
    if(year.length!==4 && year!="") errorsTemp.push("Year should be 4 digits");
    if(title.length<3 && title!="") errorsTemp.push("Title should be more than 2 charactors");
    setErrors(errorsTemp);

    let filteredMovies = [...MOVIE_LIST];

    filteredMovies = filteredMovies.filter((item) =>
      item.name
        .trim()
        .toLocaleLowerCase()
        .includes(title.trim().toLocaleLowerCase())
    );

    console.log(filteredMovies);

    filteredMovies = filteredMovies.filter(
      (item) => item.year == year.trim() || year == ""
    );

    setMovies(filteredMovies);

    setTitle("");
    setYear("");
  }

  return (
    <div>
      <Head>
        <title>Our Movie App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
        />
      </Head>

      <main>
        <Container>
          <Typography
            variant="h2"
            component="h2"
            style={{ textAlign: "center" }}
          >
            Movies
          </Typography>
          <form style={{ width: "100%" }} onSubmit={handleSubmit}>
            <Grid container spacing={2}>
              <Grid item xs={6}>
                <TextField
                  id="search-field"
                  label="search..."
                  variant="standard"
                  sx={{ width: "100%" }}
                  value={title}
                  onChange={(e) => setTitle(e.target.value)}
                />
              </Grid>
              <Grid item xs={4}>
                <TextField
                  id="year-field"
                  label="year"
                  variant="standard"
                  sx={{ width: "100%" }}
                  value={year}
                  onChange={(e) => setYear(e.target.value)}
                />
              </Grid>
              <Grid item xs={2}>
                <Button type="submit" variant="contained">
                  Filter
                </Button>
              </Grid>
              <Grid item xs={10}>
                {/* Add the error message here*/}
                {movies.length === 0 ? (
                  <ListItem>
                    <ListItemText>
                      <Typography variant="p" component="div">
                        No results please search again.
                      </Typography>
                    </ListItemText>
                  </ListItem>
                ) : (
                  <ListItem>
                    <ListItemText>
                      <Typography variant="p" component="div">
                        {movies.length} movie results
                      </Typography>
                    </ListItemText>
                  </ListItem>
                )}
              </Grid>
              <Grid item xs={10}>
                {errors.length!=0 && 
                 errors.map((item,index)=><Alert key={index} severity="error">{item}</Alert>)
                }
              </Grid>
             
            </Grid>
          </form>
          {errors.length===0 &&
          <List sx={{ width: `100%` }}>
            {movies.map((movieData, index) => {
              return (
                <ListItem key={index}>
                  <ListItemText>
                    <Typography variant="p" component="div">
                      {movieData.name} ({movieData.year})
                    </Typography>
                  </ListItemText>
                </ListItem>
              );
            })}
          </List>
         }
        </Container>
      </main>
    </div>
  );
}
